version: 2.1
orbs:
  utils: ethereum-optimism/circleci-utils@1.0.13

parameters:
  run_job:
    type: enum
    default: "select_job"
    enum:
      [
        "select_job",
        "run-algolia"
      ]


executors:
  node20:
    docker:
      - image: cimg/node:20.11.1 # Prebuilt CircleCI image for Node.js 20.x
    resource_class: medium # Adjust resource allocation as needed
  ubuntu:
    machine:
      image: ubuntu-2204:current
  rust:
    docker:
      - image: cimg/rust:1.75.0 # CircleCI's Rust Docker image
    working_directory: ~/project

commands:
  setup-node:
    steps:
      - run:
          name: Install Node.js (20.x) and pnpm
          command: |
            curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
            sudo apt-get install -y nodejs
            npm install -g pnpm
            pnpm --version
      - restore_cache:
          keys:
            - v1-pnpm-cache-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Set up pnpm global bin directory
          command: pnpm setup  # Run setup to configure the global bin directory
      - run:
          name: Install dependencies
          command: npm install -g pnpm && pnpm install --no-frozen-lockfile
      - save_cache:
          key: v1-pnpm-cache-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - ~/.pnpm-store

jobs:
  algolia:
    description: Create and upload Algolia search index
    executor: ubuntu
    steps:
      - checkout
      - setup-node
      - run:
          name: Create and upload index
          command: |
            # index:docs requires the following environment variables, coming from the algolia-search context
            # NEXT_PUBLIC_ALGOLIA_APPLICATION_ID
            # NEXT_PUBLIC_ALGOLIA_WRITE_API_KEY
            # NEXT_PUBLIC_ALGOLIA_INDEX_NAME
            pnpm run index:docs
          
  lint:
    description: Lint Markdown files and validate metadata
    executor: ubuntu
    steps:
      - checkout
      - setup-node
      - run:
          name: Get changed files
          command: |
            if [ -n "$CIRCLE_PULL_REQUEST" ]; then
              PR_NUMBER=$(echo $CIRCLE_PULL_REQUEST | rev | cut -d'/' -f1 | rev)
              CHANGED_FILES=$(curl -s "https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/pulls/$PR_NUMBER/files" | jq -r '.[].filename' | grep '\.mdx$' || true)
              echo "export CHANGED_FILES=\"$CHANGED_FILES\"" >> $BASH_ENV
            fi
      - run:
          name: Lint Markdown files
          command: pnpm lint
      - run:
          name: "Metadata Validation (Warning Only)"
          command: |
            echo "Running metadata validation (warnings will not block PR)..."
            pnpm validate-pr-metadata || true

  links:
    description: Check broken links in documentation
    executor: ubuntu
    steps:
      - checkout
      - setup-node
      - run:
          name: Run link checker
          command: pnpm link-checker

  developer-metrics:
    description: Monthly Metrics Report
    executor: ubuntu
    parameters:
      repo:
        type: string
        default: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
    steps:
      - run:
          name: Get Dates for Last Month
          command: |
            # Calculate the first day of the previous month
            first_day=$(date -d "last month" +%Y-%m-01)


            # Calculate the last day of the previous month
            last_day=$(date -d "$first_day +1 month -1 day" +%Y-%m-%d)

            # Export the last_month variable for subsequent steps
            echo "export LAST_MONTH=${first_day}..${last_day}" >> $BASH_ENV
      - utils/create-github-issue-from-search:
          SEARCH_QUERY: 'repo:ethereum-optimism/docs is:issue closed:${LAST_MONTH} -reason:\"not planned\" -label:monthly-report'
          issue-title: "${LAST_MONTH} metrics report for closed issues"
          issue-labels: "monthly-report"
          assignees: "sbvegan"
      - utils/create-github-issue-from-search:
          SEARCH_QUERY: 'repo:ethereum-optimism/docs is:pr created:${LAST_MONTH}'
          issue-title: "${LAST_MONTH} metrics report for opened prs"
          issue-labels: "monthly-report"
          assignees: "sbvegan"

workflows:
  run-algolia-workflow:
    when:
      equal: [<< pipeline.parameters.run_job >>, "run-algolia"]
    jobs:
      - algolia:
          name: Algolia Index Update
          context: algolia-search
          filters:
            branches:
              only: main

  pr-workflow:
    jobs:
      - links
      - lint
  monthly-workflow:
    when:
      equal: [build_monthly, <<pipeline.schedule.name>>]
    jobs:
      - developer-metrics:
          context: circleci-repo-docs